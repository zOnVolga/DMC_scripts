name: Beeline DMC Data Extractor Auto-Build

on:
  push:
    branches:
      - main

jobs:
  build:
    name: –°–±–æ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
    runs-on: ubuntu-latest

    steps:
      - name: –ö–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤—Å—é –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è git tag / commit info

      - name: –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
        run: ls -la

      - name: –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –≤–µ—Ä—Å–∏–∏ –∏ —Å–æ–±—Ä–∞—Ç—å —Å–∫—Ä–∏–ø—Ç
        run: |
          # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
          INPUT_SCRIPT="Beeline DMC Data Extractor.js"
          OUTPUT_SCRIPT="Beeline-DMC-Data-Extractor.auto.user.js"

          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –Ω—É–∂–Ω—ã–π —Ñ–∞–π–ª
          if [ ! -f "$INPUT_SCRIPT" ]; then
            echo "‚ùå –û—à–∏–±–∫–∞: –í—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª '$INPUT_SCRIPT' –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            exit 1
          fi

          # –ü–æ–ª—É—á–∞–µ–º –≤–µ—Ä—Å–∏—é –∏–∑ @version
          VERSION=$(grep -oP '@version\\s+\\K[^ ]+' "$INPUT_SCRIPT")

          if [ -z "$VERSION" ]; then
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–µ—Ä—Å–∏—é –≤ —Å–∫—Ä–∏–ø—Ç–µ."
            exit 1
          fi

          echo "üì• –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $VERSION"

          # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º .user.js —Å –∞–≤—Ç–æ–∞–ø–¥–µ–π—Ç–µ—Ä–æ–º
          cat > "$OUTPUT_SCRIPT" << EOF
          // ==UserScript==
          // @name         Beeline DMC Data Extractor + AutoUpdater
          // @namespace    http://tampermonkey.net/
          // @version      $VERSION
          // @description  –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Beeline DMC —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º –æ –Ω–æ–≤–æ–º –∫–æ–º–º–∏—Ç–µ
          // @author       zOnVolga
          // @match        https://dmc.beeline.ru/*
          // @grant        GM_xmlhttpRequest
          // @grant        GM_notification
          // @grant        GM_getValue
          // @grant        GM_setValue
          // @connect      raw.githubusercontent.com
          // @connect      api.github.com
          // @downloadURL  https://raw.githubusercontent.com/zOnVolga/DMC_scripts/main/$OUTPUT_SCRIPT
          // @updateURL    https://raw.githubusercontent.com/zOnVolga/DMC_scripts/main/$OUTPUT_SCRIPT
          // @icon         https://raw.githubusercontent.com/zOnVolga/DMC_scripts/main/icon-beeline-yellow.svg
          // ==/UserScript==

          (function() {
              'use strict';

              console.log("‚úÖ Beeline DMC Data Extractor –∑–∞–ø—É—â–µ–Ω");
              // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
              // –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Violentmonkey –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–¥–∞

              checkForUpdates();
          })();

          function getVersionFromString(content) {
              const versionMatch = content.match(/\/\/\s*@version\s*([0-9.\-]+)/);
              return versionMatch ? versionMatch[1].trim() : null;
          }

          function compareVersions(v1, v2) {
              const parts1 = v1.split('.').map(Number);
              const parts2 = v2.split('.').map(Number);
              for (let i = 0; i < Math.max(parts1.length, parts2.length); i++) {
                  if ((parts1[i] || 0) > (parts2[i] || 0)) return 1;
                  if ((parts1[i] || 0) < (parts2[i] || 0)) return -1;
              }
              return 0;
          }

          function checkForUpdates() {
              const scriptName = 'Beeline DMC Data Extractor';
              const repoOwner = 'zOnVolga';
              const repoName = 'DMC_scripts';
              const filePath = 'Beeline%20DMC%20Data%20Extractor.js'; // URL-encoded path
              const rawUrl = 'https://raw.githubusercontent.com/' + repoOwner + '/' + repoName + '/main/' + filePath;
              const apiUrl = 'https://api.github.com/repos/' + repoOwner + '/' + repoName + '/commits?path=' + encodeURIComponent(filePath) + '&page=1&per_page=1';

              GM_xmlhttpRequest({
                  method: 'GET',
                  url: rawUrl,
                  onload: function(response) {
                      if (response.status === 200) {
                          const remoteVersion = getVersionFromString(response.responseText);
                          const localVersion = GM_getValue('localVersion', '0.0.0');

                          if (!remoteVersion) {
                              console.error('‚ùå –í–µ—Ä—Å–∏—è –≤ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–∫—Ä–∏–ø—Ç–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
                              return;
                          }

                          if (compareVersions(remoteVersion, localVersion) > 0) {
                              console.log(\`üîî –î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è: \${remoteVersion} (—Ç–≤–æ—è: \${localVersion})\`);

                              fetch(apiUrl)
                                  .then(res => res.json())
                                  .then(commits => {
                                      if (commits.length > 0) {
                                          const commit = commits[0];
                                          const message = commit.commit.message;
                                          const author = commit.author?.login || commit.commit.author.name;
                                          const date = new Date(commit.commit.author.date).toLocaleString();

                                          GM_notification({
                                              title: '–î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ',
                                              text: \`\n\${scriptName} v\${remoteVersion}\n\n"${message}"\n–ê–≤—Ç–æ—Ä: \${author}\n–î–∞—Ç–∞: \${date}\n‚Üí –ù–∞–∂–º–∏, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å\`,
                                              timeout: 15,
                                              onclick: () => window.open(rawUrl)
                                          });
                                      }
                                  })
                                  .catch(err => {
                                      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–º–º–∏—Ç–µ:', err);
                                  });

                          } else {
                              console.log(\`‚úÖ –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–∞: \${localVersion}\`);
                          }
                      }
                  },
                  onerror: function(err) {
                      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', err);
                  }
              });

              const thisScriptVersion = getVersionFromString(document.currentScript.textContent);
              const currentVersion = GM_getValue('localVersion', '0.0.0');

              if (thisScriptVersion && compareVersions(thisScriptVersion, currentVersion) > 0) {
                  GM_setValue('localVersion', thisScriptVersion);
                  console.log(\`üíæ –õ–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ: \${thisScriptVersion}\`);
              } else if (thisScriptVersion && thisScriptVersion !== currentVersion) {
                  console.warn(\`‚ÑπÔ∏è –í–µ—Ä—Å–∏—è —Å–∫—Ä–∏–ø—Ç–∞ (\${thisScriptVersion}) –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–π (\${currentVersion})\`);
              }
              
              setTimeout(checkForUpdates, 6 * 60 * 60 * 1000);
          }
          EOF

          echo "‚úÖ –°–∫—Ä–∏–ø—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω: $OUTPUT_SCRIPT"

      - name: –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∏ –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
          git add "$OUTPUT_SCRIPT"

          git diff --cached --quiet || git diff --exit-code || git commit -m "–û–±–Ω–æ–≤–ª–µ–Ω–æ: $OUTPUT_SCRIPT"
          git push origin main
