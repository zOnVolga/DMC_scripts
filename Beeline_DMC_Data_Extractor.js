// ==UserScript==
// @name         Beeline DMC Data Extractor + AutoUpdater
// @namespace    http://tampermonkey.net/
// @version      7.1.7
// @description  –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Beeline DMC —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∫–æ–º–º–∏—Ç–µ
// @author       zOnVolga
// @match        https://dmc.beeline.ru/*
// @grant        GM_xmlhttpRequest
// @grant        GM_notification
// @grant        GM_getValue
// @grant        GM_setValue
// @connect      raw.githubusercontent.com
// @connect      api.github.com
// @downloadURL  https://raw.githubusercontent.com/zOnVolga/DMC_scripts/main/Beeline_DMC_Data_Extractor.js
// @updateURL    https://raw.githubusercontent.com/zOnVolga/DMC_scripts/main/Beeline_DMC_Data_Extractor.js
// @icon         https://raw.githubusercontent.com/zOnVolga/DMC_scripts/main/icon-beeline-yellow.svg
// ==/UserScript==
(function () {
    'use strict';
    
    // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è Axios
    let axios = null;
    let axiosLoadedPromise = null;
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ Axios
    function loadAxios() {
        if (axiosLoadedPromise) return axiosLoadedPromise;
        
        axiosLoadedPromise = new Promise((resolve, reject) => {
            const script = document.createElement('script');
            script.src = 'https://cdn.jsdelivr.net/npm/axios@0.21.1/dist/axios.min.js';
            script.onload = () => {
                if (window.axios) {
                    axios = window.axios;
                    console.log('‚úÖ Axios —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω');
                    resolve();
                } else {
                    console.error('‚ùå Axios –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ window');
                    reject(new Error('Axios –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω'));
                }
            };
            script.onerror = () => {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Axios');
                reject(new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Axios'));
            };
            document.head.appendChild(script);
        });
        
        return axiosLoadedPromise;
    }

    // –§–∏–ª—å—Ç—Ä—ã –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º (–æ—Å—Ç–∞–ª–∏—Å—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    const filter_south = "1b349473-eea7-42a0-8fd2-cfe108543bee,af71b045-5f0f-42f2-9033-1a82cdfbefb4,74ac0640-83a6-4973-a3fb-1e1b300a897c,a46571ce-4df0-4790-a09d-c733ca5dd6bc,f096da02-f05b-448f-87c6-e7d92fb65178,cb6d9423-526d-437b-8bb6-49967f4cc991";
    const filter_volga = "8ff0b9ea-ed23-4c88-b538-7decc3d0e3cf,6239e02e-d651-4ffc-9c9d-86c3ff420369,9f31d920-f48f-4794-ac4f-45ff2e1455f7,5cba0ddb-b4b5-4246-b946-822055a6788c,a534be57-c985-4493-a171-e5f9f78651be,3d429611-6fca-403d-8624-9ebb5d21ac51,4c12c603-af46-4c33-8d90-4fdb27d33df8,61274562-9acf-4563-9022-ddd026b9c7ed,663a7a85-517d-4644-a6cd-55d08d188aa5,5302af3a-93a5-4e8a-be56-51b89aa908c8,61f808ab-801d-42a7-a29d-65e891dc9094,72fc8dc9-9f76-41e4-b7e2-b6aa98aac005,e7f11972-8629-4b37-bc88-ded646c7142e,7af92d65-6933-4039-bab0-6631c8102584,cde313d6-b8e6-49ba-b47a-411a696d8b92";
    // ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

    // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ñ–∏–ª–∏–∞–ª–æ–≤ (–æ—Å—Ç–∞–ª–∏—Å—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    const branchCoordinates = {
        "–ë–∞—Ä–Ω–∞—É–ª—å—Å–∫–∏–π": { delivery: "55.007251, 82.535672", survey: "53.3565,83.7636" },
        // ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞
    function isToken(value) {
        return typeof value === 'string' && value.split('.').length === 3;
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–∫–µ–Ω–∞
    function findToken() {
        for (const key in localStorage) {
            const value = localStorage.getItem(key);
            if (isToken(value)) return value;
        }
        for (const key in sessionStorage) {
            const value = sessionStorage.getItem(key);
            if (isToken(value)) return value;
        }
        return getCookie('token');
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏
    function createButton() {
        const button = document.createElement('button');
        button.textContent = 'üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞';
        button.style.position = 'fixed';
        button.style.top = '10px';
        button.style.left = '50%';
        button.style.transform = 'translateX(-50%)';
        button.style.zIndex = '1000';
        button.style.padding = '10px';
        button.style.backgroundColor = '#4CAF50';
        button.style.color = 'white';
        button.style.border = 'none';
        button.style.borderRadius = '5px';
        button.style.cursor = 'pointer';
        button.style.fontSize = '20px';
        button.addEventListener('click', showModal);
        document.body.appendChild(button);
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ Axios –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
    loadAxios()
        .then(() => {
            createButton();
        })
        .catch(err => {
            console.error('‚ùå Axios –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω:', err);
            alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É Axios. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.');
        });

    // –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π showModal
    async function showModal() {
        if (!axios) {
            console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ Axios...');
            try {
                await loadAxios();
                // –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ Axios
                return showModal();
            } catch (error) {
                console.error('‚ùå Axios –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω:', error);
                alert('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å Axios. –°–∫—Ä–∏–ø—Ç –Ω–µ –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å.');
                return;
            }
        }

        // –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        const modal = document.createElement('div');
        // ... (–æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
        
        // –î–æ–±–∞–≤–ª–µ–Ω—ã –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ axios –≤ —Ñ—É–Ω–∫—Ü–∏—è—Ö:
        async function loadBranches() {
            if (!axios) {
                console.error('‚ùå Axios –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
                alert('Axios –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
                return;
            }
            // ... (–æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–ª–∏–∞–ª–æ–≤)
        }

        // –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è extractProjectData –∏ extractTaskData
    }

    // –§—É–Ω–∫—Ü–∏–∏ extractData –∏ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    function extractData(uncompletedTasks) {
        if (window.location.href.includes('/projects')) {
            extractProjectData();
        } else if (window.location.href.includes('/processes')) {
            extractTaskData(uncompletedTasks);
        }
    }

    async function extractProjectData() {
        if (!axios) {
            console.error('‚ùå Axios –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            alert('Axios –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            return;
        }
        // ... (–æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥)
    }

    async function extractTaskData(uncompletedTasks) {
        if (!axios) {
            console.error('‚ùå Axios –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            alert('Axios –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            return;
        }
        // ... (–æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥)
    }

    // ... (–æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ —Å–∫—Ä–∏–ø—Ç–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
})();
